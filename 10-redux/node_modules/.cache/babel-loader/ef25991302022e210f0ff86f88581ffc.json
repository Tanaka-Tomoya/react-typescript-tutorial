{"ast":null,"code":"import _objectSpread from \"/Users/tomoyatanaka/projects/ReactBeginnersBook-2.0/10-redux/03-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { CounterActionType } from './actions/counter';\nexport var initialState = {\n  count: 0\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CounterActionType.ADD:\n      return _objectSpread({}, state, {\n        count: state.count + (action.amount || 0)\n      });\n\n    case CounterActionType.DECREMENT:\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    case CounterActionType.INCREMENT:\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    default:\n      {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var _ = action.type;\n        return state;\n      }\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["/Users/tomoyatanaka/projects/ReactBeginnersBook-2.0/10-redux/03-redux/src/reducer.ts"],"names":["CounterActionType","initialState","count","counterReducer","state","action","type","ADD","amount","DECREMENT","INCREMENT","_"],"mappings":";AACA,SAAwBA,iBAAxB,QAAiD,mBAAjD;AAMA,OAAO,IAAMC,YAA0B,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnC;;AAEP,IAAMC,cAAoD,GAAG,SAAvDA,cAAuD,GAG1C;AAAA,MAFjBC,KAEiB,uEAFKH,YAEL;AAAA,MADjBI,MACiB;;AACjB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,iBAAiB,CAACO,GAAvB;AACE,+BACKH,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,IAAeG,MAAM,CAACG,MAAP,IAAiB,CAAhC;AAFT;;AAIF,SAAKR,iBAAiB,CAACS,SAAvB;AACE,+BACKL,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFvB;;AAIF,SAAKF,iBAAiB,CAACU,SAAvB;AACE,+BACKN,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFvB;;AAIF;AAAS;AACP;AACA,YAAMS,CAAQ,GAAGN,MAAM,CAACC,IAAxB;AAEA,eAAOF,KAAP;AACD;AArBH;AAuBD,CA3BD;;AA6BA,eAAeD,cAAf","sourcesContent":["import { Reducer } from 'redux';\nimport { CounterAction, CounterActionType } from './actions/counter';\n\nexport interface CounterState {\n  count: number;\n}\n\nexport const initialState: CounterState = { count: 0 };\n\nconst counterReducer: Reducer<CounterState, CounterAction> = (\n  state: CounterState = initialState,\n  action: CounterAction,\n): CounterState => {\n  switch (action.type) {\n    case CounterActionType.ADD:\n      return {\n        ...state,\n        count: state.count + (action.amount || 0),\n      };\n    case CounterActionType.DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n      };\n    case CounterActionType.INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n      };\n    default: {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _: never = action.type;\n\n      return state;\n    }\n  }\n};\n\nexport default counterReducer;\n"]},"metadata":{},"sourceType":"module"}