{"ast":null,"code":"var _jsxFileName = \"/Users/tomoyatanaka/projects/react-typescript-tutorial/09-routing/src/components/Characters/index.tsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { parse } from 'query-string';\nimport Helmet from 'react-helmet';\nimport { Button, Divider, Icon } from 'semantic-ui-react';\nimport { characterData } from '../../characterData';\nimport Spinner from '../common/Spinner';\nimport CharacterList from './CharacterList';\nimport './index.css';\n\nvar Characters = function Characters(_ref) {\n  var history = _ref.history,\n      location = _ref.location,\n      match = _ref.match;\n  var codes = Object.keys(characterData);\n  var targetCode = match.params.code;\n  var isLoading = parse(location.search).loading === 'true';\n  console.log(location.search);\n  return codes.includes(targetCode) ? React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Character List\")), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Character List\")), isLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(CharacterList, {\n    school: characterData[targetCode].school,\n    characters: characterData[targetCode].players,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Button, {\n    basic: true,\n    color: \"grey\",\n    onClick: function onClick() {\n      return history.push('/');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"\\u30DB\\u30FC\\u30E0\\u3078\"), \"}\") : React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(Characters);","map":{"version":3,"sources":["/Users/tomoyatanaka/projects/react-typescript-tutorial/09-routing/src/components/Characters/index.tsx"],"names":["React","withRouter","Redirect","parse","Helmet","Button","Divider","Icon","characterData","Spinner","CharacterList","Characters","history","location","match","codes","Object","keys","targetCode","params","code","isLoading","search","loading","console","log","includes","school","players","push"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAA8BC,UAA9B,QAAgD,cAAhD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,mBAAtC;AAEA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,aAAP;;AAIA,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,OAAgC;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACtE,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYT,aAAZ,CAAd;AACA,MAAMU,UAAU,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAhC;AACA,MAAMC,SAAS,GAAGlB,KAAK,CAACU,QAAQ,CAACS,MAAV,CAAL,CAAuBC,OAAvB,KAAmC,MAArD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACS,MAArB;AAEA,SAAOP,KAAK,CAACW,QAAN,CAAeR,UAAf,IACL,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAJF,EAOGG,SAAS,GACR,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR,oBAAC,aAAD;AACE,IAAA,MAAM,EAAEb,aAAa,CAACU,UAAD,CAAb,CAA0BS,MADpC;AAEE,IAAA,UAAU,EAAEnB,aAAa,CAACU,UAAD,CAAb,CAA0BU,OAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAeE,oBAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,IAAA,OAAO,EAAE;AAAA,aAAMhB,OAAO,CAACiB,IAAR,CAAa,GAAb,CAAN;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,6BAhBF,MADK,GAuBL,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF;AAyBD,CA/BD;;AAiCA,eAAe5B,UAAU,CAACU,UAAD,CAAzB","sourcesContent":["import React, { FC } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { parse } from 'query-string';\nimport Helmet from 'react-helmet';\nimport { Button, Divider, Icon } from 'semantic-ui-react';\n\nimport { characterData } from '../../characterData';\nimport Spinner from '../common/Spinner';\nimport CharacterList from './CharacterList';\n\nimport './index.css';\n\ntype CharactersProps = {} & RouteComponentProps<{code: string}>;\n\nconst Characters: FC<CharactersProps> = ({history, location, match}) => {\n  const codes = Object.keys(characterData);\n  const targetCode = match.params.code;\n  const isLoading = parse(location.search).loading === 'true'\n  console.log(location.search)\n\n  return codes.includes(targetCode) ? (\n    <>\n      <Helmet>\n        <title>Character List</title>\n      </Helmet>\n      <header>\n        <h1>Character List</h1>\n      </header>\n      {isLoading ? (\n        <Spinner />\n      ): (\n        <CharacterList\n          school={characterData[targetCode].school}\n          characters={characterData[targetCode].players}\n        />\n      )}\n      <Divider hidden />\n      <Button basic color=\"grey\" onClick={() => history.push('/')}>\n        <Icon name=\"home\"/>\n        ホームへ\n      </Button>}\n    </>\n  ) : (\n    <Redirect to=\"/\"/>\n  )\n}\n\nexport default withRouter(Characters)"]},"metadata":{},"sourceType":"module"}