{"ast":null,"code":"var _jsxFileName = \"/Users/tomoyatanaka/projects/react-typescript-tutorial/08-hooks/src/components/App.tsx\";\nimport React from 'react';\nimport { Button, Card, Icon, Statistic } from 'semantic-ui-react';\nimport '../App.css';\n\nvar AppComponent = function AppComponent(_ref) {\n  var timeLeft = _ref.timeLeft,\n      reset = _ref.reset;\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\u30BF\\u30A4\\u30DE\\u30FC\")), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    className: \"number-board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"time\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"prev: \", timeLeft), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"now: \", timeLeft)), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"red\",\n    fluid: true,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"redo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"Reset\"))));\n};\n\nexport default AppComponent;","map":{"version":3,"sources":["/Users/tomoyatanaka/projects/react-typescript-tutorial/08-hooks/src/components/App.tsx"],"names":["React","Button","Card","Icon","Statistic","AppComponent","timeLeft","reset"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,SAA7B,QAA8C,mBAA9C;AAEA,OAAO,YAAP;;AAOA,IAAMC,YAA0B,GAAG,SAA7BA,YAA6B;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,KAAb,QAAaA,KAAb;AAAA,SACjC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAwBD,QAAxB,CAFF,EAGE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuBA,QAAvB,CAHF,CADF,EAME,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,KAAK,MAAzB;AAA0B,IAAA,OAAO,EAAEC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,UADF,CANF,CAJF,CADiC;AAAA,CAAnC;;AAqBA,eAAeF,YAAf","sourcesContent":["import React, { FC } from 'react';\nimport { Button, Card, Icon, Statistic } from 'semantic-ui-react';\n\nimport '../App.css';\n\ninterface AppProps {\n  timeLeft: number;\n  reset: () => void;\n}\n\nconst AppComponent: FC<AppProps> = ({ timeLeft, reset }) => (\n  <div className=\"container\">\n    <header>\n      <h1>タイマー</h1>\n    </header>\n    <Card>\n      <Statistic className=\"number-board\">\n        <Statistic.Label>time</Statistic.Label>\n        <Statistic.Value>prev: {timeLeft}</Statistic.Value>\n        <Statistic.Value>now: {timeLeft}</Statistic.Value>\n      </Statistic>\n      <Card.Content>\n        <Button color=\"red\" fluid onClick={reset}>\n          <Icon name=\"redo\"/>\n          Reset\n        </Button>\n      </Card.Content>\n    </Card>\n  </div>\n)\n\nexport default AppComponent"]},"metadata":{},"sourceType":"module"}