{"ast":null,"code":"import _slicedToArray from \"/Users/tomoyatanaka/projects/react-typescript-tutorial/08-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tomoyatanaka/projects/react-typescript-tutorial/08-hooks/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Statistic, Icon } from 'semantic-ui-react';\nimport './App.css';\nvar LIMIT = 60;\n\nvar App = function App() {\n  var _useState = useState(LIMIT),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeLeft = _useState2[0],\n      setTimeLeft = _useState2[1];\n\n  var reset = function reset() {\n    setTimeLeft(LIMIT);\n  };\n\n  var tick = function tick() {\n    setTimeLeft(function (prevTime) {\n      return prevTime === 0 ? LIMIT : prevTime - 1;\n    });\n  };\n\n  useEffect(function () {\n    var timerId = setInterval(tick, 1000);\n    return function () {\n      return clearInterval(timerId);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"TIMER\")), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    className: \"number-board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"time\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, timeLeft)), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"red\",\n    fluid: true,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"redo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"reset\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tomoyatanaka/projects/react-typescript-tutorial/08-hooks/src/App.tsx"],"names":["React","useState","useEffect","Button","Card","Statistic","Icon","LIMIT","App","timeLeft","setTimeLeft","reset","tick","prevTime","timerId","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,WAAP;AAEA,IAAMC,KAAK,GAAG,EAAd;;AAGA,IAAMC,GAAO,GAAG,SAAVA,GAAU,GAAM;AAAA,kBACYP,QAAQ,CAACM,KAAD,CADpB;AAAA;AAAA,MACbE,QADa;AAAA,MACHC,WADG;;AAGpB,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBD,IAAAA,WAAW,CAACH,KAAD,CAAX;AACD,GAFD;;AAIA,MAAMK,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBF,IAAAA,WAAW,CAAC,UAAAG,QAAQ;AAAA,aAAIA,QAAQ,KAAK,CAAb,GAAiBN,KAAjB,GAAyBM,QAAQ,GAAG,CAAxC;AAAA,KAAT,CAAX;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,OAAO,GAAGC,WAAW,CAACH,IAAD,EAAO,IAAP,CAA3B;AACA,WAAO;AAAA,aAAMI,aAAa,CAACF,OAAD,CAAnB;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBL,QAAlB,CAFF,CADF,EAKE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,KAAK,MAAzB;AAA0B,IAAA,OAAO,EAAEE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,UADF,CALF,CAJF,CADF;AAmBD,CAnCD;;AAqCA,eAAeH,GAAf","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { Button, Card, Statistic, Icon } from 'semantic-ui-react';\n\nimport './App.css';\n\nconst LIMIT = 60\n\n\nconst App: FC = () => {\n  const [timeLeft, setTimeLeft] = useState(LIMIT);\n\n  const reset = () => {\n    setTimeLeft(LIMIT);\n  }\n\n  const tick = () => {\n    setTimeLeft(prevTime => prevTime === 0 ? LIMIT : prevTime - 1)\n  }\n\n  useEffect(() => {\n    const timerId = setInterval(tick, 1000);\n    return () => clearInterval(timerId)\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>TIMER</h1>\n      </header>\n      <Card>\n        <Statistic className=\"number-board\">\n          <Statistic.Label>time</Statistic.Label>\n          <Statistic.Value>{timeLeft}</Statistic.Value>\n        </Statistic>\n        <Card.Content>\n          <Button color=\"red\" fluid onClick={reset}>\n            <Icon name='redo'/>\n            reset\n          </Button>\n        </Card.Content>\n      </Card>\n    </div>\n  )\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}